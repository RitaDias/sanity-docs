import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { createClient } from "next-sanity";
import { TSDocProvider, parsePath, TSDocApp } from "@sanity/tsdoc/react";
import { createTSDocStore } from "@sanity/tsdoc/store";
import { useCallback, useMemo } from "react";
import { useRouter } from "next/router";
import { ThemeProvider, Card, studioTheme } from "@sanity/ui";

const inter = Inter({ subsets: ["latin"] });

const tsdocClient = createClient({
  projectId: "ppsg7ml5",
  dataset: "tsdoc-test",
  useCdn: false,
});

export default function Home({ all }) {
  const router = useRouter();
  const path = router.asPath;

  console.log(path);
  const store = useMemo(
    () =>
      createTSDocStore({ query: (q, params) => tsdocClient.fetch(q, params) }),
    []
  );

  const handlePathChange = useCallback(
    (nextPath, _replace) => {
      if (_replace) {
        router.replace(`${nextPath}`);
      } else {
        router.push(`${nextPath}`);
      }
    },
    [router]
  );

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider scheme="dark" theme={studioTheme}>
        <Card style={{ height: "100vh" }}>
          <TSDocApp onPathChange={handlePathChange} path={path} store={store} />
        </Card>
      </ThemeProvider>
    </>
  );
}

// export async function getStaticProps() {
//   const all = await tsdocClient.fetch(`*`);
//   return {
//     props: {
//       all,
//     },
//   };
// }
